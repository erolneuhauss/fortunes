❯ vim

Plugin "mhinz/vim-startify" lists recent edited files like this:
```
  |[e]  <empty buffer>

  |[0]   ~/git/fortunes/erol
  |[1]   ~/.p10k.zsh
  |[2]   ~/.config/nvim/init.vim
```
%
❯ vim /etc/hosts
:wq
E212: Can't open file for writing: permission denied

SOLUTION: w!!

(cnoremap w!! execute 'silent! write !sudo tee % >/dev/null' <bar> edit!)
%
❯ kubeadm init
[ERROR IsPrivilegedUser]: user is not running as root

SOLUTION: ❯ sudo !!
%
fc — process the command line history

❯ sudo systemctl start docker.service && sudo systemctl start kubelet
❯ r start=stop

r: shell built-in command (r us same as fc -e -)
%
im

❯ vim
gcc             | comment stuff out
10,c-w,<        | resize pane to the left
esx c-\ c-n     | in terminal mode switch back to NORMAL mode
:SSave          | save as session

%
im fugitive

:Git            | like git status
:G              | short for :Git
:Gdiff          | open git diff in separate pane
:Gedit          | edit a file
:Git commit     | commit in a separate pane
:Git log        | git log
:Gr             | git checkout
:Gw             | git add
:Gwq            | same as above and quit

(https://github.com/tpope/vim-fugitive)
%
im fugitive-maps staging/unstaging

-     | Stage (add) or unstage (reset) the file or hunk under the cursor
=     | Toggle an inline diff of the file under the cursor.

(https://github.com/tpope/vim-fugitive)
%
im fugitive-maps commit

cc    | create commit
cs    | create a squash commit

(https://github.com/tpope/vim-fugitive)
%
g    | git
gbc  | git checkout -b
gbl  | git branch --verbose
gcm  | git commit --message
gco  | git checkout
gfm  | git pull
gia  | git add
gix  | git rm -r --cached
gm   | git merge
gl   | git log --topo-order --pretty=format:"${_git_log_medium_format}"
gls  | git log --topo-order --stat --pretty=format:"${_git_log_medium_format}"
gp   | git push
gwd  | git diff --no-ext-diff
gws  | git status --ignore-submodules=${_git_status_ignore_submodules} --short
gwx  | git rm -r
gRl  | git remote --verbose

(~/.zprezto/modules/git/alias.zsh)
%
GIT: Revert to the specific revision using git reset

Here we first hard reset the state of the repository to some previous revision
and then soft reset back to current state.
The soft reset will keep file modifications,
so it will bring old state back on top of the current state:

# Careful, reset --hard will remove non-commited changes
$ git reset --hard 0682c06  # Use the SHA1 of the revision you want to revert to
HEAD is now at 0682c06 G3
$ git reset --soft HEAD@{1}
$ git commit -m "Reverting to the state of the project at 0682c06"
%
terminator — Multiple GNOME terminals in one window

F11 Toggle fullscreen
Ctrl + Shift + O Split terminals horizontally
Ctrl + Shift + E Split terminals vertically
Ctrl + Shift + W Close current Panel
Ctrl + Shift + T Open new tab
Ctrl + Shift + I Open new window
Alt + ← Move to the terminal left of the current one
Alt + → Move to the terminal right of the current one
Super + R Rotate terminals clockwise
Super + G Group all terminals
Super + Shift + G Remove grouping from all terminals.
Alt + A Broadcast to All terminals
Alt + O Broadcast Off

https://cheatography.com/elpedro/cheat-sheets/terminator
%
Network tips

mtr                         (mytraceroute)
curl -m5                    (--max-time)
curl --header "Host: example.com" localhost
wget -r -nd --delete-after  (--recurse --no-directories)
wget -O - http://foo > file
http httpbin.org/status/418
hey http://kanboard.fritz.box -c100 -n1000

(https://httpie.io/) (https://github.com/rakyll/hey)
%
mount | column -t
column -t -s : /etc/passwd
%
KUBERNETES
Set --dry-run=client --output=yaml

exdo     (exdo is an alias for export do=("--dry-run=client" "--output=yaml")
k create ns test $do > test-ns.yaml
k get ep --all-namespaces
k run --expose
%
k9s — dog Kubernetes CLI To Manage Your Clusters In Style!

s-l  | sort available
s-r  | sort ready
c-z  | toggle faults
c-w  | toggle wide
%
fzf — A command-line fuzzy finder

f    | f is an alias for fzf --preview "batcat --style=full --color \"always\" {}" --preview-window "~3"
vf   (vf is an alias for nvim -o `f`)

vim c-t tab tab | edit two files
cd ~/git/**

https://github.com/junegunn/fzf
%
bat — A cat(1) clone with wings.

bat /etc/hosts
bat ingress.yml
bat -A curl-pod.yml

https://github.com/sharkdp/bat
%
fd — A command-line fuzzy finder

fd -e sh                      | find files with .sh extension
fd app                        | find files and directories matching "app"
fd app --type f -e sh /etc    | find only *.sh files in dir /etc matching "app"

https://github.com/sharkdp/fd
%
rg — (ripgrep recursively searches directories for a regex pattern while respecting your gitignore)
rg -tpy foo   | limits your search to Python files
rg -Tjs foo   | excludes JavaScript files from your search

https://blog.burntsushi.net/ripgrep/
%
exa — modern replacement for ls

ll    | ll is an alias for exa -bghHliS (show me everything
llt   | llt is an alias for exa -T (tree view)
lla   | all files
lll   | lll is an alias for exa -l | less

https://github.com/ogham/exa
%
GNOME Tipps

open . | opens current folder in nautilus (open is an alias for "gio open")

clip        | shows gnome-gpaste history
clipo       | shows above as oneliner
clip get 6  | get the 6th entry

copy: file to gnome-gpaste
cat file | clip
%
